[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "xiangxinai"
version = "1.1.0"
description = "象信AI安全护栏 Python 客户端 - 基于LLM的上下文感知AI安全护栏"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "XiangxinAI", email = "wanglei@xiangxinai.cn"}
]
maintainers = [
    {name = "XiangxinAI", email = "wanglei@xiangxinai.cn"}
]
keywords = [
    "ai", "safety", "guardrails", "llm", "content-moderation", 
    "prompt-injection", "security", "compliance", "xiangxin"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Security",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.0",
    "aiohttp>=3.8.0",
    "typing-extensions>=4.0.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "types-requests",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "responses>=0.18.0",
]

[project.urls]
Homepage = "https://xiangxinai.cn"
Documentation = "https://docs.xiangxinai.cn"
Repository = "https://github.com/xiangxinai/xiangxin-guardrails"
Issues = "https://github.com/xiangxinai/xiangxin-guardrails/issues"
Changelog = "https://github.com/xiangxinai/xiangxin-guardrails/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["xiangxinai"]

[tool.setuptools.package-data]
xiangxinai = ["py.typed"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]

[tool.coverage.run]
source = ["xiangxinai"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\\.pyi?$'
extend-exclude = '''
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false